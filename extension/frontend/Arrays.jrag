aspect Arrays {
 
  eq VersionClassDecl.arrayType() {
    String name = name() + "[]";
    FieldDeclarator length = new FieldDeclarator(
      "length", new List<Dims>(), new Opt<Expr>());
    TypeDecl typeDecl = new VersionArrayDecl(
        new Modifiers(new List().add(new Modifier("public"))),
        name,
        new Opt(typeObject().createQualifiedAccess()), // [SuperClass]
        new List().add(typeCloneable().createQualifiedAccess()).add(typeSerializable().createQualifiedAccess()), // Implements*
        new List<BodyDecl>(
            new FieldDecl(
                new Modifiers(new List<Modifier>(
                    new Modifier("public"),
                    new Modifier("final"))),
                new PrimitiveTypeAccess("int"),
                new List<FieldDeclarator>(length)),
            new MethodDecl(
                new Modifiers(new List<Modifier>(new Modifier("public"))),
                typeObject().createQualifiedAccess(),
                "clone",
                new List(),
                new List(),
                new Opt(new Block()))),
        getVersion());
    return typeDecl;
  }
  
  eq VersionClassDecl.arrayType().componentType() = this;
}