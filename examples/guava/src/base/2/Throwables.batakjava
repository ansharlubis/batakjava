package guava.base;

import java.io.*;

public class Throwables ver 2 {

  public void throwIfInstanceOf(Throwable throwable, Class<IOException> declaredType)
      throws IOException {
    if (declaredType.isInstance(throwable)) {
      throw declaredType.cast(throwable);
    }
  }

  public void propagateIfPossible(Throwable throwable, Class<IOException> declaredType)
      throws IOException {
    throwIfInstanceOf(throwable, declaredType);
    propagateIfPossible(throwable);
  }

  public void propagateIfPossible(Throwable throwable) {
    if (throwable != null) {
      throwIfUnchecked(throwable);
    }
  }

  public void throwIfUnchecked(Throwable throwable) {
    if (throwable instanceof RuntimeException) {
      throw (RuntimeException) throwable;
    }
    if (throwable instanceof Error) {
      throw (Error) throwable;
    }
  }

}
